相信类型

在前面我们谈到Haskell是静态类型的，在编译时每个表达式的类型都已明确，这就提高了代码的安全性。若代码中让布尔值与数字相除，就不会通过编译。这样的好处就是与其让程序在运行时崩溃，不如在编译时捕获可能的错误。Haskell中万物皆有类型，因此在执行编译之时编译器可以大有所为。

与java和pascal不同，haskell支持类型推导。写下一个数字，你就没必要另告诉haskell说“它是个数字”，它自己能推导出来。这样我们就不必在每个函数或表达式上都标明其类型了。在前面我们只简单涉及一下haskell的类型方面的知识，但是理解这一类型系统对于haskell 的学习是至关重要的。

类型是每个表达式都有的某种标签，它标明了这一表达式所属的范畴。例如，表达式True是boolean型，"hello"是个字符串，等等。

可以使用ghci来检测表达式的类型。使用:t命令后跟任何可用的表达式，即可得到该表达式的类型，先试一下：

ghci> :t 'a'   
'a' :: Char   
ghci> :t True   
True :: Bool   
ghci> :t "HELLO!"   
"HELLO!" :: [Char]   
ghci> :t (True, 'a')   
(True, 'a') :: (Bool, Char)   
ghci> :t 4 == 5   
4 == 5 :: Bool

可以看出，:t命令处理一个表达式的输出结果为表达式后跟::及其类型，::读作“它的类型为”。凡是明确的类型，其首字母必为大写。'a',如它的样子，是Char类型，易知是个字符（character）。True是Bool类型，也靠谱。不过这又是啥，检测"hello"得一个[Char]？这方括号表示一个List，所以我们可以将其读作“一组字符的List”。而与List不同，每个Tuple都是独立的类型，于是(True,"a")的类型是(Bool,Char)，而('a','b','c')的类型为(Char,Char,Char)。4==5一定返回 False，所以它的类型为Bool。

同样，函数也有类型。编写函数时，给它一个明确的类型声明是个好习惯，比较短的函数就不用多此一举了。还记得前面那个过滤大写字母的List Comprehension吗？给它加上类型声明便是这个样子：

removeNonUppercase :: [Char] -> [Char]   
removeNonUppercase st = [ c | c <- st, c `elem` ['A'..'Z']]
removeNonUppercase的类型为[Char]->[Char]，从它的参数和返回值的类型上可以看出，它将一个字符串映射为另一个字符串。[Char]与String是等价的，但使用String会更清晰：removeNonUppercase :: String -> String。编译器会自动检测出它的类型，我们还是标明了它的类型声明。要是多个参数的函数该怎样？如下便是一个将三个整数相加的简单函数。

addThree :: Int -> Int -> Int -> Int   
addThree x y z = x + y + z
参数之间由->分隔，而与返回值之间并无特殊差异。返回值是最后一项，参数就是前三项。稍后，我们将讲解为何只用->而不是Int,Int,Int->Int之类“更好看”的方式来分隔参数。

如果你打算给你编写的函数加上个类型声明却拿不准它的类型是啥，只要先不写类型声明，把函数体写出来，再使用:t命令测一下即可。函数也是表达式，所以:t对函数也是同样可用的。

如下是几个常见的类型：

Int表示整数。7可以是Int，但7.2不可以。Int是有界的，也就是说它由上限和下限。对32位的机器而言，上限一般是214748364，下限是-214748364。

Integer表示...厄...也是整数，但它是无界的。这就意味着可以用它存放非常非常大的数，我是说非常大。它的效率不如Int高。

factorial :: Integer -> Integer   
factorial n = product [1..n]
ghci> factorial 50   
30414093201713378043612608166064768844377641568960512000000000000
Float表示单精度的浮点数。

circumference :: Float -> Float   
circumference r = 2 * pi * r
ghci> circumference 4.0   
25.132742
Double表示双精度的浮点数。

circumference' :: Double -> Double   
circumference' r = 2 * pi * r
ghci> circumference' 4.0   
25.132741228718345
Bool表示布尔值，它只有两种值：True和False。

Char表示一个字符。一个字符由单引号括起，一组字符的List即为字符串。

Tuple的类型取决于它的长度及其中项的类型。注意，空Tuple同样也是个类型，它只有一种值：()。

