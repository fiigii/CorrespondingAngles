有$的函数调用
好的，接下来看看$函数。它也叫作函数调用符。先看下它的定义：

($) :: (a -> b) -> a -> b   
f $ x = f x

什么鬼东西？这没啥意义的操作符？它只是个函数调用符罢了？好吧，不全是，但差不多。普通的函数调用符有最高的优先级，而$的优先级则最低。用空格的函数调用符是左结合的，如f a b c与((f a) b) c等价，而$则是右结合的。

听着不错。但有什么用？它可以减少我们代码中括号的数目。试想有这个表达式：sum (map sqrt [1..130])。由于低优先级的$，我们可以将其改为sum $ map sqrt [1..130]，可以省敲不少键！sqrt 3 + 4 + 9会怎样？这会得到9，4和根3的和。若要取(3+4+9)的平方根，就得sqrt (3+4+9)或用$：sqrt $ 3+4+9。因为$有最低的优先级，所以你可以把$看作是在右面写一对括号的等价形式。

sum (filter (> 10) (map (*2) [2..10]))该如何？嗯，$是右结合，f (g (z x))与f $ g $ z x等价。所以我么可以将sum (filter (> 10) (map (*2) [2..10])重写为sum $ filter (> 10) $ map (*2) [2..10]。

除了减少括号外，$还可以将数据作为函数使用。例如映射一个函数调用符到一组函数组成的list：

ghci> map ($ 3) [(4+),(10*),(^2),sqrt]   
[7.0,30.0,9.0,1.7320508075688772]
